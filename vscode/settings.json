{
  "workbench.iconTheme": "material-icon-theme",
  // ruler points - favour new line at 80
  "editor.rulers": [
    80,
    120
  ],
  // colorize bracket pairs
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  // indentation - colour vertical lines; indicate nonstandard indentation
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.lightIndicatorStyleLineWidth": 2,
  "indentRainbow.errorColor": "rgba(128, 32, 32, 0.6)",
  "indentRainbow.colors": [
    "rgba(38, 70, 83, 0.3)",
    "rgba(42, 157, 143, 0.3)",
    "rgba(233, 196, 106, 0.3)",
    "rgba(244, 162, 97, 0.3)",
    "rgba(231, 111, 81, 0.3)"
  ],
  // breadcrumbs
  "breadcrumbs.enabled": true,
  // terminal
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  // editor
  // "editor.fontFamily": "Hack, Consolas, 'Courier New', monospace",
  // random theme switcher
  "randomThemeSwitcher.switchMode": "daily",
  "randomThemeSwitcher.themeList": [
    "2077",
    "Dracula Soft",
    "Dracula",
    "Eva Light",
    "fairyfloss",
    "Fluffy Theme",
    "Kay Light",
    "Nord Light Brighter",
    "Nord Light",
    "Nord",
    "Ooh! A Flower!",
    "Pink Candy Dark Warm",
    "Pink Candy Dark",
    "Pink Candy Light",
    "Pink Cat Boo",
    "Quiet Light",
    "Shades of Purple",
    "Tinacious Design (Light)",
    "Tinacious Design",
    "Witch Hazel Hypercolor",
    "Witch Hazel",
  ],
  // HIGHLIGHTING/LANGUAGE SUPPORT
  // treat ERB as HTML
  "emmet.includeLanguages": {
    "erb": "html"
  },
  // set up syntax highlighting for ERB files, and try to stop HTML files being read as Nunjucks
  "files.associations": {
    "*.html": "html",
    "erb": "html",
    "html.erb": "html",
    "html": "html"
  },
  // FORMATTING
  // tab spaces
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  // tell Stylelint to check scss as well
  "stylelint.validate": [
    "css",
    "scss"
  ],
  // use Prettier/Beautify on save -- commented out for use on projects with defined formatting rules
  // uncomment to use standard Prettier/Beautify/Rubocop rules, and comment out the setting above
  // "editor.formatOnSave": true,
  // set Prettier as default formatter - to see other options or set language-specific defaults
  // remove this or comment it out, go to a file, Ctrl + Shift + P
  // format document and configure a default (for the language of the current file)
  // "editor.defaultFormatter": "esbenp.prettier-vscode",
  // BEAUTIFY IS DEPRECATED - I'VE UNINSTALLED IT
  // set Beautify to only format the languages not covered by Prettier
  // the setting above probably sets Prettier as default for all languages, so this (and the extension) may be redundant
  // "beautify.language": {
  //   "html": [
  //     "html",
  //     "php",
  //     "erb"
  //   ],
  //   "css": [],
  //   "js": []
  // },
  // Prettier ESLint configuration (mostly taken from the extension README)
  // "editor.defaultFormatter": "esbenp.prettier-vscode", // disabled  18/04/24 - this seems like something that should be enabled per project, not globally
  // "editor.defaultFormatter": "rvest.vs-code-prettier-eslint",
  "editor.formatOnSave": true,
  "editor.formatOnSaveMode": "file",
  // "vs-code-prettier-eslint.prettierLast": false,
  // set up Ruby to format on save per Standard
  // "ruby.useLanguageServer": true,
  // "ruby.format": "standard",
  // "ruby.lint": {
  //   "standard": true
  // },
  "[ruby]": {
    "editor.defaultFormatter": "Shopify.ruby-lsp", // this was RuboCop until installing Shopify's Ruby extension pack
    "editor.formatOnSave": true,
    // the rest were added when installing Shopify's Ruby extension pack
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "editor.semanticHighlighting.enabled": true
    // the following probably don't matter - I just enabled them when trying to debug a formatter issue
    // "rubyLsp.formatter": "rubocop",
    // "rubyLsp.rubyVersionManager": {
    //   "identifier": "rbenv"
    // }
  },
  // set black as Python formatter
  "python.formatting.provider": "black",
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.tabSize": 4,
    "editor.formatOnType": true
  },
  // set Nunjucks Template Formatter to format Nunjucks files
  "[nj][njk][nunjucks][twig]": {
    "djlint.enableLinting": true,
    "djlint.profile": "nunjucks",
    "editor.defaultFormatter": "okitavera.vscode-nunjucks-formatter",
    "editor.formatOnSave": true
  },
  "nunjucksFormat.newline": true,
  // "[html]": {
  //   "editor.defaultFormatter": "esbenp.prettier-vscode"
  // },
  // organise Tailwind classes
  "headwind.runOnSave": false,
  // GIT(HUB)
  // only trigger GitLens hover modal when hovering over annotation
  "gitlens.hovers.currentLine.over": "annotation",
  "gitlens.defaultDateFormat": "D MMMM YYYY, hh:mm",
  "gitlens.defaultDateShortFormat": "D MMM YYYY",
  "gitlens.defaultTimeFormat": "hh:mm",
  // Github-style Markdown preview (Cmd + Shift + V)
  "markdown-preview-github-styles.colorTheme": "light",
  // JAVASCRIPT
  // imports
  "javascript.updateImportsOnFileMove.enabled": "always",
  "tabnine.experimentalAutoImports": true,
  // spacing
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "javascript.format.insertSpaceAfterConstructor": true,
  // TypseScript
  "typescript.updateImportsOnFileMove.enabled": "always",
  // "typescript.validate.enable": false,
  "auto-close-tag.disableOnLanguage": [
    "typescript"
  ],
  // GODOT
  // the extension says this port setting is needed for Godot 4 compatibility
  "godot_tools.gdscript_lsp_server_port": 6005,
  "godot_tools.editor_path": "/opt/homebrew/bin/godot",
  "[gdscript]": {
    "editor.defaultFormatter": "EddieDover.gdscript-formatter-linter"
  },
  // OTHER
  // something extension related
  "redhat.telemetry.enabled": false,
  // TO BE SORTED
  "githubPullRequests.pullBranch": "never",
  "workbench.colorTheme": "fairyfloss",
  "standard.autoFixOnSave": true,
  "editor.minimap.enabled": false,
  "playwright.reuseBrowser": true,
  "playwright.showTrace": false,
  "djlint.ignore": [
    "H030",
    "H031"
  ],
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "hidden",
  "python.defaultInterpreterPath": "python3",
  "djlint.formatLanguages": [
    "jinja",
    "nj",
    "njk",
    "nunjucks",
    "twig",
    "handlebars",
    "hbs",
    "mustache"
  ],
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.tabSize": 4
  },
  "[javascript][typescript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[markdown]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.markdownlint": "explicit"
    }
  },
  "[css][scss]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": "explicit"
    }
  },
  "prettier.enable": false,
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace"
  },
  "[css]": {
    "editor.defaultFormatter": "stylelint.vscode-stylelint"
  },
  "randomThemeSwitcher.lastSwitchDay": 4,
}